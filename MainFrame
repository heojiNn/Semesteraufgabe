
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;


import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


@SuppressWarnings("serial")
public class MainFrame extends JFrame implements ActionListener {

	private int width;
	private int height;
	
	public Font buttonFont = new Font("Serif", Font.BOLD, 25);
	public ImageIcon background = new ImageIcon(this.getClass().getResource("/maxresdefault.jpg"));
	
	JPanel mainMenu;
	JInternalFrame optionMenu;
	JInternalFrame startMenu;
	
	
	MainFrame(String title, int newWidth, int newHeight) {
		super(title);
		
		width = newWidth;
		height = newHeight;
		
		//setLayout(new BorderLayout());
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		//Fullscreen-Commands
		//setExtendedState(MAXIMIZED_BOTH); 
		//setUndecorated(true);
		
		//Background of the MainFrame (picture should be relative to the workbench file)
		JLabel contentPane = new JLabel();
		contentPane.setIcon(background);
		contentPane.setLayout(new BorderLayout());
		contentPane.setSize(new Dimension(width, height));
		setContentPane(contentPane);
		
		//Adding JPanel to MainFrame for the MainMenu
		mainMenu = new JPanel();
		BoxLayout boxlayout = new BoxLayout(mainMenu, BoxLayout.Y_AXIS);
		mainMenu.setLayout(boxlayout);
		mainMenu.setBorder(new EmptyBorder(new Insets(height/5, width/4, height/5, width/4)));
	
		//Creating Buttons
		JButton startGame = new JButton("Start");
		startGame.setFont(buttonFont);
		startGame.setSize(width/5, height/10);
		startGame.setAlignmentX(Component.CENTER_ALIGNMENT);
		startGame.addActionListener(this);
		
		JButton help = new JButton("Optionen");
		help.setFont(buttonFont);
		help.setSize(width/5, height/10);
		help.addActionListener(this);
		help.setAlignmentX(Component.CENTER_ALIGNMENT);
		
		JButton exit = new JButton("Exit");
		exit.setFont(buttonFont);
		exit.setSize(width/5, height/10);
		exit.addActionListener(this);
		exit.setAlignmentX(Component.CENTER_ALIGNMENT);
		
		//adding Buttons
		mainMenu.add(startGame);
		mainMenu.add(Box.createRigidArea(new Dimension(0, 80)));
		mainMenu.add(help);
		mainMenu.add(Box.createRigidArea(new Dimension(0, 80)));
		mainMenu.add(exit);
		
		
		add(mainMenu, BorderLayout.CENTER);
		mainMenu.setOpaque(false);
		
		setResizable(false);
		setPreferredSize(new Dimension(width, height));
		pack();
		setVisible(true);
	}
		

	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getActionCommand().equals("Start")) {
			mainMenu.setVisible(false);
			
			startMenu = new JInternalFrame();
			BasicInternalFrameUI titlebar = (BasicInternalFrameUI) startMenu.getUI();
			titlebar.setNorthPane(null);
			startMenu.setBorder(null);
			JLabel contentPane = new JLabel();
			contentPane.setIcon(background);
			contentPane.setLayout(new BorderLayout());
			contentPane.setSize(new Dimension(width, height));
			startMenu.setContentPane(contentPane);
			JPanel optionPanel = new JPanel();
			BoxLayout boxlayout = new BoxLayout(optionPanel, BoxLayout.Y_AXIS);
			optionPanel.setLayout(boxlayout);
			optionPanel.setBorder(new EmptyBorder(new Insets(height/5, width/4, height/5, width/4)));
			
			JLabel category = new JLabel("Kategorie");
			category.setFont(buttonFont);
			category.setSize(new Dimension(width/5, height/10));
			category.setForeground(Color.WHITE);
			category.setAlignmentX(Component.CENTER_ALIGNMENT);
			
			JButton returnButton = new JButton("Hauptmenü");
			returnButton.setFont(buttonFont);
			returnButton.setSize(new Dimension(width/5, height/10));
			returnButton.addActionListener(new OptionActionListener(this, mainMenu, startMenu, width, height));
			returnButton.setAlignmentX(Component.CENTER_ALIGNMENT);
			
			
			optionPanel.add(category);
			optionPanel.add(Box.createRigidArea(new Dimension(0, 80)));
			optionPanel.add(returnButton);
			
			optionPanel.setOpaque(false);
			startMenu.add(optionPanel);
			add(startMenu);
			startMenu.setVisible(true);
			
		}
		
		if (e.getActionCommand().equals("Optionen")) {
			//hiding Panel
			mainMenu.setVisible(false);
			
			//creating JInternalFrame for OptionMenu
			optionMenu = new JInternalFrame();
			
			//hiding InternalFrame's titlebar and borders
			BasicInternalFrameUI titlebar = (BasicInternalFrameUI) optionMenu.getUI();
			titlebar.setNorthPane(null);
			optionMenu.setBorder(null);
			
			//background
			JLabel contentPane = new JLabel();
			contentPane.setIcon(background);
			contentPane.setLayout(new BorderLayout());
			contentPane.setSize(new Dimension(width, height));
			optionMenu.setContentPane(contentPane);
			
			//creating and adding JPanel with buttons
			JPanel optionPanel = new JPanel();
			BoxLayout boxlayout = new BoxLayout(optionPanel, BoxLayout.Y_AXIS);
			optionPanel.setLayout(boxlayout);
			optionPanel.setBorder(new EmptyBorder(new Insets(height/5, width/4, height/5, width/4)));
			JButton videosettings = new JButton("Videosettings");
			videosettings.setFont(buttonFont);
			videosettings.setSize(width/5, height/10);
			videosettings.setAlignmentX(Component.CENTER_ALIGNMENT);
			videosettings.addActionListener(new OptionActionListener(this, mainMenu, optionMenu, width, height));
			JButton returnButton = new JButton("Hauptmenü");
			returnButton.setFont(buttonFont);
			returnButton.setSize(width/5, height/10);
			returnButton.setAlignmentX(Component.CENTER_ALIGNMENT);
			returnButton.addActionListener(new OptionActionListener(this, mainMenu, optionMenu, width, height));
			optionPanel.add(videosettings);
			optionPanel.add(Box.createRigidArea(new Dimension(0, 80)));
			optionPanel.add(returnButton);
			
			//adding JInternalFrame to MainFrame
			optionPanel.setOpaque(false);
			optionMenu.add(optionPanel);
			add(optionMenu);
			optionMenu.setVisible(true);
		} 
		
		if (e.getActionCommand().equals(("Exit"))) {
			System.exit(0);
		} 
		
		
	}
	
	public static void main(String args[]) {
		
		new MainFrame("Informatik-Quiz", 1280, 720);
		
	}
	
	
	
	
}
